{
  "address": "0x0e2aeBE3E835d93DFB8BF3cF69A41c88f10368E7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_brevisRequest",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "goal",
          "type": "uint256"
        }
      ],
      "name": "AccountCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "name": "DepositMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "name": "GoalReached",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "accounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "goal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastUpdateTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_appVkHashes",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes[]",
          "name": "_appCircuitOutputs",
          "type": "bytes[]"
        }
      ],
      "name": "brevisBatchCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_appVkHash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_appCircuitOutput",
          "type": "bytes"
        }
      ],
      "name": "brevisCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "brevisRequest",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        }
      ],
      "name": "createAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_vkHash",
          "type": "bytes32"
        }
      ],
      "name": "setVkHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "verifiedPremiumUsers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vkHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x440a26703f53d8f24c832262a5200289b9837595e98affc2b6b8d6e91d60b520",
  "receipt": {
    "to": null,
    "from": "0x1AB67c4ac117F3c850D5A93784B7701Cc5816387",
    "contractAddress": "0x0e2aeBE3E835d93DFB8BF3cF69A41c88f10368E7",
    "transactionIndex": 74,
    "gasUsed": "693143",
    "logsBloom": "0x
    "blockHash": "0xe6c08db69202eb8b024491eeee2bc124b64c70d293aa628e019d25914c632314",
    "transactionHash": "0x440a26703f53d8f24c832262a5200289b9837595e98affc2b6b8d6e91d60b520",
    "logs": [
      {
        "transactionIndex": 74,
        "blockNumber": 7959275,
        "transactionHash": "0x440a26703f53d8f24c832262a5200289b9837595e98affc2b6b8d6e91d60b520",
        "address": "0x0e2aeBE3E835d93DFB8BF3cF69A41c88f10368E7",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001ab67c4ac117f3c850d5a93784b7701cc5816387"
        ],
        "data": "0x",
        "logIndex": 122,
        "blockHash": "0xe6c08db69202eb8b024491eeee2bc124b64c70d293aa628e019d25914c632314"
      }
    ],
    "blockNumber": 7959275,
    "cumulativeGasUsed": "9491100",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa082F86d9d1660C29cf3f962A31d7D20E367154F"
  ],
  "numDeployments": 1,
  "solcInputHash": "3254d8dea7fd269d7e540f524e5cc342",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_brevisRequest\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"}],\"name\":\"AccountCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"DepositMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"GoalReached\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"accounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"goal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_appVkHashes\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_appCircuitOutputs\",\"type\":\"bytes[]\"}],\"name\":\"brevisBatchCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_appVkHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_appCircuitOutput\",\"type\":\"bytes\"}],\"name\":\"brevisCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"brevisRequest\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"}],\"name\":\"createAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_vkHash\",\"type\":\"bytes32\"}],\"name\":\"setVkHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"verifiedPremiumUsers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vkHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MuslimGoHajj.sol\":\"MuslimGoHajj\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/MuslimGoHajj.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./lib/BrevisAppZkOnly.sol\\\";\\n\\ncontract MuslimGoHajj is BrevisAppZkOnly, Ownable {\\n    struct SavingsAccount {\\n        uint256 goal;\\n        uint256 balance;\\n        uint256 lastUpdateTime;\\n        bool isActive;\\n    }\\n    \\n    bytes32 public vkHash;\\n    mapping(address => SavingsAccount) public accounts;\\n    mapping(address => bool) public verifiedPremiumUsers;\\n    \\n    event AccountCreated(address indexed user, uint256 goal);\\n    event DepositMade(address indexed user, uint256 amount, uint256 newBalance);\\n    event GoalReached(address indexed user, uint256 totalAmount);\\n    event FundsWithdrawn(address indexed user, uint256 amount);\\n    \\n    constructor(address _brevisRequest) BrevisAppZkOnly(_brevisRequest) Ownable(msg.sender) {}\\n\\n    function handleProofResult(bytes32 _vkHash, bytes calldata _circuitOutput) internal override {\\n        require(vkHash == _vkHash, \\\"invalid vk\\\");\\n        \\n        // Decode output from the circuit - includes premium status verification\\n        (address userAddr, uint64 blockNum, uint256 isPremium) = decodeOutput(_circuitOutput);\\n        \\n        // Verify user is premium tier\\n        require(isPremium == 1, \\\"Not a premium user\\\");\\n        \\n        // Mark user as verified premium\\n        verifiedPremiumUsers[userAddr] = true;\\n    }\\n    \\n    function createAccount(uint256 goalAmount) external {\\n        require(verifiedPremiumUsers[msg.sender], \\\"Must be verified premium user\\\");\\n        require(!accounts[msg.sender].isActive, \\\"Account already exists\\\");\\n        require(goalAmount > 0, \\\"Goal must be positive\\\");\\n        \\n        accounts[msg.sender] = SavingsAccount({\\n            goal: goalAmount,\\n            balance: 0,\\n            lastUpdateTime: block.timestamp,\\n            isActive: true\\n        });\\n        \\n        emit AccountCreated(msg.sender, goalAmount);\\n    }\\n    \\n    function deposit() external payable {\\n        require(accounts[msg.sender].isActive, \\\"No active account\\\");\\n        require(msg.value > 0, \\\"Must deposit something\\\");\\n        \\n        SavingsAccount storage account = accounts[msg.sender];\\n        account.balance += msg.value;\\n        account.lastUpdateTime = block.timestamp;\\n        \\n        emit DepositMade(msg.sender, msg.value, account.balance);\\n        \\n        if (account.balance >= account.goal) {\\n            emit GoalReached(msg.sender, account.balance);\\n        }\\n    }\\n    \\n    function withdraw(uint256 amount) external {\\n        SavingsAccount storage account = accounts[msg.sender];\\n        require(account.isActive, \\\"No active account\\\");\\n        require(amount <= account.balance, \\\"Insufficient balance\\\");\\n        \\n        account.balance -= amount;\\n        account.lastUpdateTime = block.timestamp;\\n        \\n        (bool success, ) = msg.sender.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Transfer failed\\\");\\n        \\n        emit FundsWithdrawn(msg.sender, amount);\\n    }\\n\\n    function decodeOutput(bytes calldata o) internal pure returns (address, uint64, uint256) {\\n        uint64 blockNum = uint64(bytes8(o[0:8]));\\n        address userAddr = address(bytes20(o[8:28]));\\n        uint256 isPremium = uint256(bytes32(o[28:60]));\\n        return (userAddr, blockNum, isPremium);\\n    }\\n\\n    function setVkHash(bytes32 _vkHash) external onlyOwner {\\n        vkHash = _vkHash;\\n    }\\n    \\n    // Allow contract to receive ETH\\n    receive() external payable {}\\n}\",\"keccak256\":\"0xf15930392f3e104b48ef08b3ae66294be7bc2271642ddb98cefc15def52d3b66\",\"license\":\"MIT\"},\"contracts/lib/BrevisAppZkOnly.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\n// App that only accepts ZK-attested results.\\nabstract contract BrevisAppZkOnly {\\n    address public brevisRequest;\\n\\n    modifier onlyBrevisRequest() {\\n        require(msg.sender == brevisRequest, \\\"invalid caller\\\");\\n        _;\\n    }\\n\\n    constructor(address _brevisRequest) {\\n        brevisRequest = _brevisRequest;\\n    }\\n\\n    function handleProofResult(bytes32 _vkHash, bytes calldata _appCircuitOutput) internal virtual {\\n        // to be overrided by custom app\\n    }\\n\\n    function brevisCallback(bytes32 _appVkHash, bytes calldata _appCircuitOutput) external onlyBrevisRequest {\\n        handleProofResult(_appVkHash, _appCircuitOutput);\\n    }\\n\\n    function brevisBatchCallback(\\n        bytes32[] calldata _appVkHashes,\\n        bytes[] calldata _appCircuitOutputs\\n    ) external onlyBrevisRequest {\\n        for (uint i = 0; i < _appVkHashes.length; i++) {\\n            handleProofResult(_appVkHashes[i], _appCircuitOutputs[i]);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x87d19d0a3c1544a69a075915b04dd999406664c01566c60c570ef8a4c526faf7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080346100cb57601f610b9838819003918201601f19168301916001600160401b038311848410176100d0578084926020946040528339810103126100cb57516001600160a01b0390818116908190036100cb57600080546001600160a01b0319908116909217905533156100b257600154903390821617600155604051913391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3610ab190816100e78239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260048036101561001f575b5050361561001d57600080fd5b005b600091823560e01c80632e1a7d4d1461071b57806338931a31146106f55780633bca02fc146106035780634fe840f5146105e45780635e5c06e214610584578063715018a6146105195780637859f6d9146104f757806379d6b6a21461048a5780638da5cb5b14610462578063cab13915146102ae578063cbc2adac1461026c578063d0e30db0146101585763f2fde38b146100bb5750610010565b34610154576020366003190112610154578135916001600160a01b0391828416809403610150576100ea6108de565b831561013a5750506001548273ffffffffffffffffffffffffffffffffffffffff19821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b508260031936011261015457338352600360205261017e60ff600383862001541661090a565b341561022957338352600360205280832060018101805493348501809511610216575083905542600282015581513481528360208201527f0b05f0d1cd0819f155b8a61f60baf7767c1ee49d04aeaab701df236140eb93f9833392a2548210156101e6578280f35b519081527fec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c8560203392a238808280f35b634e487b7160e01b865260119052602485fd5b906020606492519162461bcd60e51b8352820152601660248201527f4d757374206465706f73697420736f6d657468696e67000000000000000000006044820152fd5b5090346101545760203660031901126101545780356001600160a01b0381168091036102aa578360ff92849260209652855220541690519015158152f35b8380fd5b5082903461045e576020806003193601126101545783359133845284825260ff81852054161561041b573384526003825260ff60038286200154166103d85782156103955780516080810181811067ffffffffffffffff821117610382577f7325fb14450d3e5eb288c620b4ff1d6b43a41b33b4a4f143ae88cd4c12f99ea3949596508252848152600383820191878352838101428152606082019360018552338a52838752858a2092518355516001830155516002820155019051151560ff80198354169116179055519283523392a280f35b634e487b7160e01b865260418752602486fd5b5162461bcd60e51b815280850191909152601560248201527f476f616c206d75737420626520706f73697469766500000000000000000000006044820152606490fd5b5162461bcd60e51b815280850191909152601660248201527f4163636f756e7420616c726561647920657869737473000000000000000000006044820152606490fd5b5162461bcd60e51b815280850191909152601d60248201527f4d757374206265207665726966696564207072656d69756d20757365720000006044820152606490fd5b5080fd5b83823461045e578160031936011261045e576020906001600160a01b03600154169051908152f35b50346101545736600319011261045e576024359067ffffffffffffffff908183116102aa57366023840112156102aa57828101359182116102aa5736602483850101116102aa5760246104f4936104ec6001600160a01b038754163314610956565b0190356109a2565b80f35b50503461045e57602036600319011261045e576105126108de565b3560025580f35b83346105815780600319360112610581576105326108de565b806001600160a01b0360015473ffffffffffffffffffffffffffffffffffffffff198116600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50903461015457602036600319011261015457356001600160a01b03811680910361015457828291608094526003602052209081549160018101549160ff6003600284015493015416928151948552602085015283015215156060820152f35b83823461045e578160031936011261045e576020906002549051908152f35b50346101545736600319011261045e5767ffffffffffffffff9080358281116102aa5761063390369083016108a8565b91909260249384358281116106f15761064f90369085016108a8565b906106656001600160a01b038954163314610956565b875b868110610672578880f35b8060051b838210156106df5780830135601e19843603018112156106db5783018035908782116106d75760200181360381136106d7576106b4928701356109a2565b60001981146106c557600101610667565b634e487b7160e01b8952601186528789fd5b8b80fd5b8a80fd5b634e487b7160e01b8a5260328752888afd5b8680fd5b83823461045e578160031936011261045e576001600160a01b0360209254169051908152f35b503461015457602090816003193601126102aa578235923385526003835281852061074c60ff60038301541661090a565b600181018054908187116108655786820391821161085257556002429101558480808087335af13d1561084d5767ffffffffffffffff3d81811161083a57845191601f8201601f19908116603f0116830190811183821017610827578552815286853d92013e5b156107e65750907feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d91519283523392a280f35b82606492519162461bcd60e51b8352820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152fd5b634e487b7160e01b895260418552602489fd5b634e487b7160e01b885260418452602488fd5b6107b3565b634e487b7160e01b885260118452602488fd5b845162461bcd60e51b8152808501879052601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152606490fd5b9181601f840112156108d95782359167ffffffffffffffff83116108d9576020808501948460051b0101116108d957565b600080fd5b6001600160a01b036001541633036108f257565b60405163118cdaa760e01b8152336004820152602490fd5b1561091157565b60405162461bcd60e51b815260206004820152601160248201527f4e6f20616374697665206163636f756e740000000000000000000000000000006044820152606490fd5b1561095d57565b60405162461bcd60e51b815260206004820152600e60248201527f696e76616c69642063616c6c65720000000000000000000000000000000000006044820152606490fd5b91909160025403610a3657806008116108d95780601c116108d957603c116108d9576001601c820135036109f1576008013560601c60005260046020526040600020600160ff19825416179055565b60405162461bcd60e51b815260206004820152601260248201527f4e6f742061207072656d69756d207573657200000000000000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152600a60248201527f696e76616c696420766b000000000000000000000000000000000000000000006044820152606490fdfea2646970667358221220c77a8928d364cecfb674a96fbe94059f2d8d6ff4448c8e1fe0ee1289cc36598c64736f6c63430008140033",
  "deployedBytecode": "0x60406080815260048036101561001f575b5050361561001d57600080fd5b005b600091823560e01c80632e1a7d4d1461071b57806338931a31146106f55780633bca02fc146106035780634fe840f5146105e45780635e5c06e214610584578063715018a6146105195780637859f6d9146104f757806379d6b6a21461048a5780638da5cb5b14610462578063cab13915146102ae578063cbc2adac1461026c578063d0e30db0146101585763f2fde38b146100bb5750610010565b34610154576020366003190112610154578135916001600160a01b0391828416809403610150576100ea6108de565b831561013a5750506001548273ffffffffffffffffffffffffffffffffffffffff19821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b508260031936011261015457338352600360205261017e60ff600383862001541661090a565b341561022957338352600360205280832060018101805493348501809511610216575083905542600282015581513481528360208201527f0b05f0d1cd0819f155b8a61f60baf7767c1ee49d04aeaab701df236140eb93f9833392a2548210156101e6578280f35b519081527fec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c8560203392a238808280f35b634e487b7160e01b865260119052602485fd5b906020606492519162461bcd60e51b8352820152601660248201527f4d757374206465706f73697420736f6d657468696e67000000000000000000006044820152fd5b5090346101545760203660031901126101545780356001600160a01b0381168091036102aa578360ff92849260209652855220541690519015158152f35b8380fd5b5082903461045e576020806003193601126101545783359133845284825260ff81852054161561041b573384526003825260ff60038286200154166103d85782156103955780516080810181811067ffffffffffffffff821117610382577f7325fb14450d3e5eb288c620b4ff1d6b43a41b33b4a4f143ae88cd4c12f99ea3949596508252848152600383820191878352838101428152606082019360018552338a52838752858a2092518355516001830155516002820155019051151560ff80198354169116179055519283523392a280f35b634e487b7160e01b865260418752602486fd5b5162461bcd60e51b815280850191909152601560248201527f476f616c206d75737420626520706f73697469766500000000000000000000006044820152606490fd5b5162461bcd60e51b815280850191909152601660248201527f4163636f756e7420616c726561647920657869737473000000000000000000006044820152606490fd5b5162461bcd60e51b815280850191909152601d60248201527f4d757374206265207665726966696564207072656d69756d20757365720000006044820152606490fd5b5080fd5b83823461045e578160031936011261045e576020906001600160a01b03600154169051908152f35b50346101545736600319011261045e576024359067ffffffffffffffff908183116102aa57366023840112156102aa57828101359182116102aa5736602483850101116102aa5760246104f4936104ec6001600160a01b038754163314610956565b0190356109a2565b80f35b50503461045e57602036600319011261045e576105126108de565b3560025580f35b83346105815780600319360112610581576105326108de565b806001600160a01b0360015473ffffffffffffffffffffffffffffffffffffffff198116600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50903461015457602036600319011261015457356001600160a01b03811680910361015457828291608094526003602052209081549160018101549160ff6003600284015493015416928151948552602085015283015215156060820152f35b83823461045e578160031936011261045e576020906002549051908152f35b50346101545736600319011261045e5767ffffffffffffffff9080358281116102aa5761063390369083016108a8565b91909260249384358281116106f15761064f90369085016108a8565b906106656001600160a01b038954163314610956565b875b868110610672578880f35b8060051b838210156106df5780830135601e19843603018112156106db5783018035908782116106d75760200181360381136106d7576106b4928701356109a2565b60001981146106c557600101610667565b634e487b7160e01b8952601186528789fd5b8b80fd5b8a80fd5b634e487b7160e01b8a5260328752888afd5b8680fd5b83823461045e578160031936011261045e576001600160a01b0360209254169051908152f35b503461015457602090816003193601126102aa578235923385526003835281852061074c60ff60038301541661090a565b600181018054908187116108655786820391821161085257556002429101558480808087335af13d1561084d5767ffffffffffffffff3d81811161083a57845191601f8201601f19908116603f0116830190811183821017610827578552815286853d92013e5b156107e65750907feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d91519283523392a280f35b82606492519162461bcd60e51b8352820152600f60248201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152fd5b634e487b7160e01b895260418552602489fd5b634e487b7160e01b885260418452602488fd5b6107b3565b634e487b7160e01b885260118452602488fd5b845162461bcd60e51b8152808501879052601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152606490fd5b9181601f840112156108d95782359167ffffffffffffffff83116108d9576020808501948460051b0101116108d957565b600080fd5b6001600160a01b036001541633036108f257565b60405163118cdaa760e01b8152336004820152602490fd5b1561091157565b60405162461bcd60e51b815260206004820152601160248201527f4e6f20616374697665206163636f756e740000000000000000000000000000006044820152606490fd5b1561095d57565b60405162461bcd60e51b815260206004820152600e60248201527f696e76616c69642063616c6c65720000000000000000000000000000000000006044820152606490fd5b91909160025403610a3657806008116108d95780601c116108d957603c116108d9576001601c820135036109f1576008013560601c60005260046020526040600020600160ff19825416179055565b60405162461bcd60e51b815260206004820152601260248201527f4e6f742061207072656d69756d207573657200000000000000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152600a60248201527f696e76616c696420766b000000000000000000000000000000000000000000006044820152606490fdfea2646970667358221220c77a8928d364cecfb674a96fbe94059f2d8d6ff4448c8e1fe0ee1289cc36598c64736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1111,
        "contract": "contracts/MuslimGoHajj.sol:MuslimGoHajj",
        "label": "brevisRequest",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 8,
        "contract": "contracts/MuslimGoHajj.sol:MuslimGoHajj",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 196,
        "contract": "contracts/MuslimGoHajj.sol:MuslimGoHajj",
        "label": "vkHash",
        "offset": 0,
        "slot": "2",
        "type": "t_bytes32"
      },
      {
        "astId": 201,
        "contract": "contracts/MuslimGoHajj.sol:MuslimGoHajj",
        "label": "accounts",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(SavingsAccount)194_storage)"
      },
      {
        "astId": 205,
        "contract": "contracts/MuslimGoHajj.sol:MuslimGoHajj",
        "label": "verifiedPremiumUsers",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(SavingsAccount)194_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct MuslimGoHajj.SavingsAccount)",
        "numberOfBytes": "32",
        "value": "t_struct(SavingsAccount)194_storage"
      },
      "t_struct(SavingsAccount)194_storage": {
        "encoding": "inplace",
        "label": "struct MuslimGoHajj.SavingsAccount",
        "members": [
          {
            "astId": 187,
            "contract": "contracts/MuslimGoHajj.sol:MuslimGoHajj",
            "label": "goal",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 189,
            "contract": "contracts/MuslimGoHajj.sol:MuslimGoHajj",
            "label": "balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 191,
            "contract": "contracts/MuslimGoHajj.sol:MuslimGoHajj",
            "label": "lastUpdateTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 193,
            "contract": "contracts/MuslimGoHajj.sol:MuslimGoHajj",
            "label": "isActive",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}